<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="tetris.ClearLinesTests" tests="5" skipped="0" failures="5" errors="0" timestamp="2024-10-02T02:02:31" hostname="thinkpad" time="0.042">
  <properties/>
  <testcase name="testClear1Line" classname="tetris.ClearLinesTests" time="0.007">
    <failure message="org.scalatest.exceptions.TestFailedException: didPass was false&#10;Hint: When a new tetromino is placed, any full lines are removed from the board. If a lines is&#10;removed, the lines above it are moved down to such that the line is replaced by the line above it.&#10;Empty lines are added to the top to ensure the game has the correct height.&#10;--------------------------------------------------------------------------------&#10;This is what went wrong:&#10;&#10;step=0, rand=4, actions=&lt;&gt;&#10;Want | Got ✓&#10;------------&#10;.SS  | .SS  &#10;SS.  | SS.  &#10;...  | ...  &#10;...  | ...  &#10;ZZ.  | ZZ.  &#10;&#10;step=1, rand=4, actions=&lt;RotateRight&gt;&#10;Want | Got ✓&#10;------------&#10;.S.  | .S.  &#10;.SS  | .SS  &#10;..S  | ..S  &#10;...  | ...  &#10;ZZ.  | ZZ.  &#10;&#10;step=2, rand=4, actions=&lt;Down&gt;&#10;Want | Got ✓&#10;------------&#10;...  | ...  &#10;.S.  | .S.  &#10;.SS  | .SS  &#10;..S  | ..S  &#10;ZZ.  | ZZ.  &#10;&#10;step=3, rand=4, actions=&lt;Down&gt;&#10;Want | Got ✓&#10;------------&#10;...  | ...  &#10;...  | ...  &#10;.S.  | .S.  &#10;.SS  | .SS  &#10;ZZS  | ZZS  &#10;&#10;step=4, rand=4, actions=&lt;Down&gt;&#10;Want | Got ✗&#10;------------&#10;.SS  | .SS  &#10;SS.  | SS.  &#10;...  | .S.  &#10;.S.  | .SS  &#10;.SS  | ZZS  &#10;&#10;" type="org.scalatest.exceptions.TestFailedException">org.scalatest.exceptions.TestFailedException: didPass was false
Hint: When a new tetromino is placed, any full lines are removed from the board. If a lines is
removed, the lines above it are moved down to such that the line is replaced by the line above it.
Empty lines are added to the top to ensure the game has the correct height.
--------------------------------------------------------------------------------
This is what went wrong:

step=0, rand=4, actions=&lt;&gt;
Want | Got ✓
------------
.SS  | .SS  
SS.  | SS.  
...  | ...  
...  | ...  
ZZ.  | ZZ.  

step=1, rand=4, actions=&lt;RotateRight&gt;
Want | Got ✓
------------
.S.  | .S.  
.SS  | .SS  
..S  | ..S  
...  | ...  
ZZ.  | ZZ.  

step=2, rand=4, actions=&lt;Down&gt;
Want | Got ✓
------------
...  | ...  
.S.  | .S.  
.SS  | .SS  
..S  | ..S  
ZZ.  | ZZ.  

step=3, rand=4, actions=&lt;Down&gt;
Want | Got ✓
------------
...  | ...  
...  | ...  
.S.  | .S.  
.SS  | .SS  
ZZS  | ZZS  

step=4, rand=4, actions=&lt;Down&gt;
Want | Got ✗
------------
.SS  | .SS  
SS.  | SS.  
...  | .S.  
.S.  | .SS  
.SS  | ZZS  


	at app//org.scalatest.Assertions.newAssertionFailedException(Assertions.scala:530)
	at app//org.scalatest.Assertions.newAssertionFailedException$(Assertions.scala:529)
	at app//org.scalatest.FunSuite.newAssertionFailedException(FunSuite.scala:1560)
	at app//org.scalatest.Assertions$AssertionsHelper.macroAssert(Assertions.scala:503)
	at app//generic.GameTestSuite.checkGame(GameTestSuite.scala:298)
	at app//tetris.TetrisTestSuiteBase.checkGame(TetrisTestSuiteBase.scala:106)
	at app//tetris.ClearLinesTests.$anonfun$new$1(ClearLinesTests.scala:42)
	at app//scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at app//infrastructure.TestBase.$anonfun$test$1(TestBase.scala:36)
	at app//org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)
	at app//org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)
	at app//org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at app//org.scalatest.Transformer.apply(Transformer.scala:22)
	at app//org.scalatest.Transformer.apply(Transformer.scala:20)
	at app//org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:186)
	at app//org.scalatest.TestSuite.withFixture(TestSuite.scala:196)
	at app//org.scalatest.TestSuite.withFixture$(TestSuite.scala:195)
	at app//infrastructure.TestBase.org$scalatest$concurrent$TimeLimitedTests$$super$withFixture(TestBase.scala:9)
	at app//org.scalatest.concurrent.TimeLimitedTests.$anonfun$withFixture$3(TimeLimitedTests.scala:154)
	at app//org.scalatest.enablers.Timed$$anon$1.timeoutAfter(Timed.scala:127)
	at app//org.scalatest.concurrent.TimeLimits.failAfterImpl(TimeLimits.scala:239)
	at app//org.scalatest.concurrent.TimeLimits.failAfterImpl$(TimeLimits.scala:233)
	at app//org.scalatest.concurrent.TimeLimits$.failAfterImpl(TimeLimits.scala:305)
	at app//org.scalatest.concurrent.TimeLimitedTests.withFixture(TimeLimitedTests.scala:153)
	at app//org.scalatest.concurrent.TimeLimitedTests.withFixture$(TimeLimitedTests.scala:150)
	at app//infrastructure.TestBase.withFixture(TestBase.scala:9)
	at app//org.scalatest.FunSuiteLike.invokeWithFixture$1(FunSuiteLike.scala:184)
	at app//org.scalatest.FunSuiteLike.$anonfun$runTest$1(FunSuiteLike.scala:196)
	at app//org.scalatest.SuperEngine.runTestImpl(Engine.scala:286)
	at app//org.scalatest.FunSuiteLike.runTest(FunSuiteLike.scala:196)
	at app//org.scalatest.FunSuiteLike.runTest$(FunSuiteLike.scala:178)
	at app//org.scalatest.FunSuite.runTest(FunSuite.scala:1560)
	at app//org.scalatest.FunSuiteLike.$anonfun$runTests$1(FunSuiteLike.scala:229)
	at app//org.scalatest.SuperEngine.$anonfun$runTestsInBranch$1(Engine.scala:393)
	at app//scala.collection.immutable.List.foreach(List.scala:334)
	at app//org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:381)
	at app//org.scalatest.SuperEngine.runTestsInBranch(Engine.scala:376)
	at app//org.scalatest.SuperEngine.runTestsImpl(Engine.scala:458)
	at app//org.scalatest.FunSuiteLike.runTests(FunSuiteLike.scala:229)
	at app//org.scalatest.FunSuiteLike.runTests$(FunSuiteLike.scala:228)
	at app//org.scalatest.FunSuite.runTests(FunSuite.scala:1560)
	at app//org.scalatest.Suite.run(Suite.scala:1124)
	at app//org.scalatest.Suite.run$(Suite.scala:1106)
	at app//org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at app//org.scalatest.FunSuiteLike.$anonfun$run$1(FunSuiteLike.scala:233)
	at app//org.scalatest.SuperEngine.runImpl(Engine.scala:518)
	at app//org.scalatest.FunSuiteLike.run(FunSuiteLike.scala:233)
	at app//org.scalatest.FunSuiteLike.run$(FunSuiteLike.scala:232)
	at app//infrastructure.TestBase.run(TestBase.scala:26)
	at app//org.scalatest.Suite.callExecuteOnSuite$1(Suite.scala:1187)
	at app//org.scalatest.Suite.$anonfun$runNestedSuites$1(Suite.scala:1234)
	at app//scala.collection.ArrayOps$.foreach$extension(ArrayOps.scala:1323)
	at app//org.scalatest.Suite.runNestedSuites(Suite.scala:1232)
	at app//org.scalatest.Suite.runNestedSuites$(Suite.scala:1166)
	at app//org.scalatest.Suites.runNestedSuites(Suites.scala:56)
	at app//org.scalatest.Suite.run(Suite.scala:1121)
	at app//org.scalatest.Suite.run$(Suite.scala:1106)
	at app//tetris.TetrisTestSuitesBase.runDirect(TetrisTestSuitesBase.scala:20)
	at app//tetris.TetrisTestSuitesBase.runWithScoreCounter(TetrisTestSuitesBase.scala:14)
	at app//tetris.TetrisTestSuite3_2.run(TetrisTestSuite3_2.scala:25)
	at app//org.scalatestplus.junit.JUnitRunner.run(JUnitRunner.scala:99)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:112)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:40)
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:54)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:53)
	at java.base@17.0.12/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base@17.0.12/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base@17.0.12/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base@17.0.12/java.lang.reflect.Method.invoke(Unknown Source)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:92)
	at jdk.proxy1/jdk.proxy1.$Proxy4.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$2.run(TestWorker.java:183)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:132)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:103)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:63)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:121)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71)
	at app//worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at app//worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
</failure>
  </testcase>
  <testcase name="testClear1LineMiddle" classname="tetris.ClearLinesTests" time="0.012">
    <failure message="org.scalatest.exceptions.TestFailedException: didPass was false&#10;Hint: When a new tetromino is placed, any full lines are removed from the board. If a lines is&#10;removed, the lines above it are moved down to such that the line is replaced by the line above it.&#10;Empty lines are added to the top to ensure the game has the correct height.&#10;--------------------------------------------------------------------------------&#10;This is what went wrong:&#10;&#10;step=0, rand=0, actions=&lt;&gt;&#10;Want | Got ✓&#10;------------&#10;.... | .... &#10;IIII | IIII &#10;.... | .... &#10;.... | .... &#10;.Z.. | .Z.. &#10;.Z.. | .Z.. &#10;ZZZ. | ZZZ. &#10;ZZ.. | ZZ.. &#10;Z.Z. | Z.Z. &#10;&#10;step=1, rand=0, actions=&lt;RotateRight&gt;&#10;Want | Got ✓&#10;------------&#10;..I. | ..I. &#10;..I. | ..I. &#10;..I. | ..I. &#10;..I. | ..I. &#10;.Z.. | .Z.. &#10;.Z.. | .Z.. &#10;ZZZ. | ZZZ. &#10;ZZ.. | ZZ.. &#10;Z.Z. | Z.Z. &#10;&#10;step=2, rand=0, actions=&lt;Right&gt;&#10;Want | Got ✓&#10;------------&#10;...I | ...I &#10;...I | ...I &#10;...I | ...I &#10;...I | ...I &#10;.Z.. | .Z.. &#10;.Z.. | .Z.. &#10;ZZZ. | ZZZ. &#10;ZZ.. | ZZ.. &#10;Z.Z. | Z.Z. &#10;&#10;step=3, rand=0, actions=&lt;Down&gt;&#10;Want | Got ✓&#10;------------&#10;.... | .... &#10;...I | ...I &#10;...I | ...I &#10;...I | ...I &#10;.Z.I | .Z.I &#10;.Z.. | .Z.. &#10;ZZZ. | ZZZ. &#10;ZZ.. | ZZ.. &#10;Z.Z. | Z.Z. &#10;&#10;step=4, rand=0, actions=&lt;Down&gt;&#10;Want | Got ✓&#10;------------&#10;.... | .... &#10;.... | .... &#10;...I | ...I &#10;...I | ...I &#10;.Z.I | .Z.I &#10;.Z.I | .Z.I &#10;ZZZ. | ZZZ. &#10;ZZ.. | ZZ.. &#10;Z.Z. | Z.Z. &#10;&#10;step=5, rand=0, actions=&lt;Down&gt;&#10;Want | Got ✓&#10;------------&#10;.... | .... &#10;.... | .... &#10;.... | .... &#10;...I | ...I &#10;.Z.I | .Z.I &#10;.Z.I | .Z.I &#10;ZZZI | ZZZI &#10;ZZ.. | ZZ.. &#10;Z.Z. | Z.Z. &#10;&#10;step=6, rand=0, actions=&lt;Down&gt;&#10;Want | Got ✓&#10;------------&#10;.... | .... &#10;.... | .... &#10;.... | .... &#10;.... | .... &#10;.Z.I | .Z.I &#10;.Z.I | .Z.I &#10;ZZZI | ZZZI &#10;ZZ.I | ZZ.I &#10;Z.Z. | Z.Z. &#10;&#10;step=7, rand=0, actions=&lt;Down&gt;&#10;Want | Got ✓&#10;------------&#10;.... | .... &#10;.... | .... &#10;.... | .... &#10;.... | .... &#10;.Z.. | .Z.. &#10;.Z.I | .Z.I &#10;ZZZI | ZZZI &#10;ZZ.I | ZZ.I &#10;Z.ZI | Z.ZI &#10;&#10;step=8, rand=0, actions=&lt;Down&gt;&#10;Want | Got ✗&#10;------------&#10;.... | .... &#10;IIII | IIII &#10;.... | .... &#10;.... | .... &#10;.... | .Z.. &#10;.Z.. | .Z.I &#10;.Z.I | ZZZI &#10;ZZ.I | ZZ.I &#10;Z.ZI | Z.ZI &#10;&#10;" type="org.scalatest.exceptions.TestFailedException">org.scalatest.exceptions.TestFailedException: didPass was false
Hint: When a new tetromino is placed, any full lines are removed from the board. If a lines is
removed, the lines above it are moved down to such that the line is replaced by the line above it.
Empty lines are added to the top to ensure the game has the correct height.
--------------------------------------------------------------------------------
This is what went wrong:

step=0, rand=0, actions=&lt;&gt;
Want | Got ✓
------------
.... | .... 
IIII | IIII 
.... | .... 
.... | .... 
.Z.. | .Z.. 
.Z.. | .Z.. 
ZZZ. | ZZZ. 
ZZ.. | ZZ.. 
Z.Z. | Z.Z. 

step=1, rand=0, actions=&lt;RotateRight&gt;
Want | Got ✓
------------
..I. | ..I. 
..I. | ..I. 
..I. | ..I. 
..I. | ..I. 
.Z.. | .Z.. 
.Z.. | .Z.. 
ZZZ. | ZZZ. 
ZZ.. | ZZ.. 
Z.Z. | Z.Z. 

step=2, rand=0, actions=&lt;Right&gt;
Want | Got ✓
------------
...I | ...I 
...I | ...I 
...I | ...I 
...I | ...I 
.Z.. | .Z.. 
.Z.. | .Z.. 
ZZZ. | ZZZ. 
ZZ.. | ZZ.. 
Z.Z. | Z.Z. 

step=3, rand=0, actions=&lt;Down&gt;
Want | Got ✓
------------
.... | .... 
...I | ...I 
...I | ...I 
...I | ...I 
.Z.I | .Z.I 
.Z.. | .Z.. 
ZZZ. | ZZZ. 
ZZ.. | ZZ.. 
Z.Z. | Z.Z. 

step=4, rand=0, actions=&lt;Down&gt;
Want | Got ✓
------------
.... | .... 
.... | .... 
...I | ...I 
...I | ...I 
.Z.I | .Z.I 
.Z.I | .Z.I 
ZZZ. | ZZZ. 
ZZ.. | ZZ.. 
Z.Z. | Z.Z. 

step=5, rand=0, actions=&lt;Down&gt;
Want | Got ✓
------------
.... | .... 
.... | .... 
.... | .... 
...I | ...I 
.Z.I | .Z.I 
.Z.I | .Z.I 
ZZZI | ZZZI 
ZZ.. | ZZ.. 
Z.Z. | Z.Z. 

step=6, rand=0, actions=&lt;Down&gt;
Want | Got ✓
------------
.... | .... 
.... | .... 
.... | .... 
.... | .... 
.Z.I | .Z.I 
.Z.I | .Z.I 
ZZZI | ZZZI 
ZZ.I | ZZ.I 
Z.Z. | Z.Z. 

step=7, rand=0, actions=&lt;Down&gt;
Want | Got ✓
------------
.... | .... 
.... | .... 
.... | .... 
.... | .... 
.Z.. | .Z.. 
.Z.I | .Z.I 
ZZZI | ZZZI 
ZZ.I | ZZ.I 
Z.ZI | Z.ZI 

step=8, rand=0, actions=&lt;Down&gt;
Want | Got ✗
------------
.... | .... 
IIII | IIII 
.... | .... 
.... | .... 
.... | .Z.. 
.Z.. | .Z.I 
.Z.I | ZZZI 
ZZ.I | ZZ.I 
Z.ZI | Z.ZI 


	at app//org.scalatest.Assertions.newAssertionFailedException(Assertions.scala:530)
	at app//org.scalatest.Assertions.newAssertionFailedException$(Assertions.scala:529)
	at app//org.scalatest.FunSuite.newAssertionFailedException(FunSuite.scala:1560)
	at app//org.scalatest.Assertions$AssertionsHelper.macroAssert(Assertions.scala:503)
	at app//generic.GameTestSuite.checkGame(GameTestSuite.scala:298)
	at app//tetris.TetrisTestSuiteBase.checkGame(TetrisTestSuiteBase.scala:106)
	at app//tetris.ClearLinesTests.$anonfun$new$2(ClearLinesTests.scala:147)
	at app//scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at app//infrastructure.TestBase.$anonfun$test$1(TestBase.scala:36)
	at app//org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)
	at app//org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)
	at app//org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at app//org.scalatest.Transformer.apply(Transformer.scala:22)
	at app//org.scalatest.Transformer.apply(Transformer.scala:20)
	at app//org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:186)
	at app//org.scalatest.TestSuite.withFixture(TestSuite.scala:196)
	at app//org.scalatest.TestSuite.withFixture$(TestSuite.scala:195)
	at app//infrastructure.TestBase.org$scalatest$concurrent$TimeLimitedTests$$super$withFixture(TestBase.scala:9)
	at app//org.scalatest.concurrent.TimeLimitedTests.$anonfun$withFixture$3(TimeLimitedTests.scala:154)
	at app//org.scalatest.enablers.Timed$$anon$1.timeoutAfter(Timed.scala:127)
	at app//org.scalatest.concurrent.TimeLimits.failAfterImpl(TimeLimits.scala:239)
	at app//org.scalatest.concurrent.TimeLimits.failAfterImpl$(TimeLimits.scala:233)
	at app//org.scalatest.concurrent.TimeLimits$.failAfterImpl(TimeLimits.scala:305)
	at app//org.scalatest.concurrent.TimeLimitedTests.withFixture(TimeLimitedTests.scala:153)
	at app//org.scalatest.concurrent.TimeLimitedTests.withFixture$(TimeLimitedTests.scala:150)
	at app//infrastructure.TestBase.withFixture(TestBase.scala:9)
	at app//org.scalatest.FunSuiteLike.invokeWithFixture$1(FunSuiteLike.scala:184)
	at app//org.scalatest.FunSuiteLike.$anonfun$runTest$1(FunSuiteLike.scala:196)
	at app//org.scalatest.SuperEngine.runTestImpl(Engine.scala:286)
	at app//org.scalatest.FunSuiteLike.runTest(FunSuiteLike.scala:196)
	at app//org.scalatest.FunSuiteLike.runTest$(FunSuiteLike.scala:178)
	at app//org.scalatest.FunSuite.runTest(FunSuite.scala:1560)
	at app//org.scalatest.FunSuiteLike.$anonfun$runTests$1(FunSuiteLike.scala:229)
	at app//org.scalatest.SuperEngine.$anonfun$runTestsInBranch$1(Engine.scala:393)
	at app//scala.collection.immutable.List.foreach(List.scala:334)
	at app//org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:381)
	at app//org.scalatest.SuperEngine.runTestsInBranch(Engine.scala:376)
	at app//org.scalatest.SuperEngine.runTestsImpl(Engine.scala:458)
	at app//org.scalatest.FunSuiteLike.runTests(FunSuiteLike.scala:229)
	at app//org.scalatest.FunSuiteLike.runTests$(FunSuiteLike.scala:228)
	at app//org.scalatest.FunSuite.runTests(FunSuite.scala:1560)
	at app//org.scalatest.Suite.run(Suite.scala:1124)
	at app//org.scalatest.Suite.run$(Suite.scala:1106)
	at app//org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at app//org.scalatest.FunSuiteLike.$anonfun$run$1(FunSuiteLike.scala:233)
	at app//org.scalatest.SuperEngine.runImpl(Engine.scala:518)
	at app//org.scalatest.FunSuiteLike.run(FunSuiteLike.scala:233)
	at app//org.scalatest.FunSuiteLike.run$(FunSuiteLike.scala:232)
	at app//infrastructure.TestBase.run(TestBase.scala:26)
	at app//org.scalatest.Suite.callExecuteOnSuite$1(Suite.scala:1187)
	at app//org.scalatest.Suite.$anonfun$runNestedSuites$1(Suite.scala:1234)
	at app//scala.collection.ArrayOps$.foreach$extension(ArrayOps.scala:1323)
	at app//org.scalatest.Suite.runNestedSuites(Suite.scala:1232)
	at app//org.scalatest.Suite.runNestedSuites$(Suite.scala:1166)
	at app//org.scalatest.Suites.runNestedSuites(Suites.scala:56)
	at app//org.scalatest.Suite.run(Suite.scala:1121)
	at app//org.scalatest.Suite.run$(Suite.scala:1106)
	at app//tetris.TetrisTestSuitesBase.runDirect(TetrisTestSuitesBase.scala:20)
	at app//tetris.TetrisTestSuitesBase.runWithScoreCounter(TetrisTestSuitesBase.scala:14)
	at app//tetris.TetrisTestSuite3_2.run(TetrisTestSuite3_2.scala:25)
	at app//org.scalatestplus.junit.JUnitRunner.run(JUnitRunner.scala:99)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:112)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:40)
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:54)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:53)
	at java.base@17.0.12/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base@17.0.12/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base@17.0.12/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base@17.0.12/java.lang.reflect.Method.invoke(Unknown Source)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:92)
	at jdk.proxy1/jdk.proxy1.$Proxy4.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$2.run(TestWorker.java:183)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:132)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:103)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:63)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:121)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71)
	at app//worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at app//worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
</failure>
  </testcase>
  <testcase name="testClear2Lines" classname="tetris.ClearLinesTests" time="0.008">
    <failure message="org.scalatest.exceptions.TestFailedException: didPass was false&#10;Hint: When a new tetromino is placed, any full lines are removed from the board. If a lines is&#10;removed, the lines above it are moved down to such that the line is replaced by the line above it.&#10;Empty lines are added to the top to ensure the game has the correct height.&#10;--------------------------------------------------------------------------------&#10;This is what went wrong:&#10;&#10;step=0, rand=0, actions=&lt;&gt;&#10;Want | Got ✓&#10;------------&#10;.... | .... &#10;IIII | IIII &#10;.... | .... &#10;.... | .... &#10;ZZZ. | ZZZ. &#10;.Z.. | .Z.. &#10;ZZZ. | ZZZ. &#10;Z.Z. | Z.Z. &#10;&#10;step=1, rand=0, actions=&lt;RotateRight&gt;&#10;Want | Got ✓&#10;------------&#10;..I. | ..I. &#10;..I. | ..I. &#10;..I. | ..I. &#10;..I. | ..I. &#10;ZZZ. | ZZZ. &#10;.Z.. | .Z.. &#10;ZZZ. | ZZZ. &#10;Z.Z. | Z.Z. &#10;&#10;step=2, rand=0, actions=&lt;Right&gt;&#10;Want | Got ✓&#10;------------&#10;...I | ...I &#10;...I | ...I &#10;...I | ...I &#10;...I | ...I &#10;ZZZ. | ZZZ. &#10;.Z.. | .Z.. &#10;ZZZ. | ZZZ. &#10;Z.Z. | Z.Z. &#10;&#10;step=3, rand=0, actions=&lt;Down&gt;&#10;Want | Got ✓&#10;------------&#10;.... | .... &#10;...I | ...I &#10;...I | ...I &#10;...I | ...I &#10;ZZZI | ZZZI &#10;.Z.. | .Z.. &#10;ZZZ. | ZZZ. &#10;Z.Z. | Z.Z. &#10;&#10;step=4, rand=0, actions=&lt;Down&gt;&#10;Want | Got ✓&#10;------------&#10;.... | .... &#10;.... | .... &#10;...I | ...I &#10;...I | ...I &#10;ZZZI | ZZZI &#10;.Z.I | .Z.I &#10;ZZZ. | ZZZ. &#10;Z.Z. | Z.Z. &#10;&#10;step=5, rand=0, actions=&lt;Down&gt;&#10;Want | Got ✓&#10;------------&#10;.... | .... &#10;.... | .... &#10;.... | .... &#10;...I | ...I &#10;ZZZI | ZZZI &#10;.Z.I | .Z.I &#10;ZZZI | ZZZI &#10;Z.Z. | Z.Z. &#10;&#10;step=6, rand=0, actions=&lt;Down&gt;&#10;Want | Got ✓&#10;------------&#10;.... | .... &#10;.... | .... &#10;.... | .... &#10;.... | .... &#10;ZZZI | ZZZI &#10;.Z.I | .Z.I &#10;ZZZI | ZZZI &#10;Z.ZI | Z.ZI &#10;&#10;step=7, rand=0, actions=&lt;Down&gt;&#10;Want | Got ✗&#10;------------&#10;.... | .... &#10;IIII | IIII &#10;.... | .... &#10;.... | .... &#10;.... | ZZZI &#10;.... | .Z.I &#10;.Z.I | ZZZI &#10;Z.ZI | Z.ZI &#10;&#10;" type="org.scalatest.exceptions.TestFailedException">org.scalatest.exceptions.TestFailedException: didPass was false
Hint: When a new tetromino is placed, any full lines are removed from the board. If a lines is
removed, the lines above it are moved down to such that the line is replaced by the line above it.
Empty lines are added to the top to ensure the game has the correct height.
--------------------------------------------------------------------------------
This is what went wrong:

step=0, rand=0, actions=&lt;&gt;
Want | Got ✓
------------
.... | .... 
IIII | IIII 
.... | .... 
.... | .... 
ZZZ. | ZZZ. 
.Z.. | .Z.. 
ZZZ. | ZZZ. 
Z.Z. | Z.Z. 

step=1, rand=0, actions=&lt;RotateRight&gt;
Want | Got ✓
------------
..I. | ..I. 
..I. | ..I. 
..I. | ..I. 
..I. | ..I. 
ZZZ. | ZZZ. 
.Z.. | .Z.. 
ZZZ. | ZZZ. 
Z.Z. | Z.Z. 

step=2, rand=0, actions=&lt;Right&gt;
Want | Got ✓
------------
...I | ...I 
...I | ...I 
...I | ...I 
...I | ...I 
ZZZ. | ZZZ. 
.Z.. | .Z.. 
ZZZ. | ZZZ. 
Z.Z. | Z.Z. 

step=3, rand=0, actions=&lt;Down&gt;
Want | Got ✓
------------
.... | .... 
...I | ...I 
...I | ...I 
...I | ...I 
ZZZI | ZZZI 
.Z.. | .Z.. 
ZZZ. | ZZZ. 
Z.Z. | Z.Z. 

step=4, rand=0, actions=&lt;Down&gt;
Want | Got ✓
------------
.... | .... 
.... | .... 
...I | ...I 
...I | ...I 
ZZZI | ZZZI 
.Z.I | .Z.I 
ZZZ. | ZZZ. 
Z.Z. | Z.Z. 

step=5, rand=0, actions=&lt;Down&gt;
Want | Got ✓
------------
.... | .... 
.... | .... 
.... | .... 
...I | ...I 
ZZZI | ZZZI 
.Z.I | .Z.I 
ZZZI | ZZZI 
Z.Z. | Z.Z. 

step=6, rand=0, actions=&lt;Down&gt;
Want | Got ✓
------------
.... | .... 
.... | .... 
.... | .... 
.... | .... 
ZZZI | ZZZI 
.Z.I | .Z.I 
ZZZI | ZZZI 
Z.ZI | Z.ZI 

step=7, rand=0, actions=&lt;Down&gt;
Want | Got ✗
------------
.... | .... 
IIII | IIII 
.... | .... 
.... | .... 
.... | ZZZI 
.... | .Z.I 
.Z.I | ZZZI 
Z.ZI | Z.ZI 


	at app//org.scalatest.Assertions.newAssertionFailedException(Assertions.scala:530)
	at app//org.scalatest.Assertions.newAssertionFailedException$(Assertions.scala:529)
	at app//org.scalatest.FunSuite.newAssertionFailedException(FunSuite.scala:1560)
	at app//org.scalatest.Assertions$AssertionsHelper.macroAssert(Assertions.scala:503)
	at app//generic.GameTestSuite.checkGame(GameTestSuite.scala:298)
	at app//tetris.TetrisTestSuiteBase.checkGame(TetrisTestSuiteBase.scala:106)
	at app//tetris.ClearLinesTests.$anonfun$new$3(ClearLinesTests.scala:233)
	at app//scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at app//infrastructure.TestBase.$anonfun$test$1(TestBase.scala:36)
	at app//org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)
	at app//org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)
	at app//org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at app//org.scalatest.Transformer.apply(Transformer.scala:22)
	at app//org.scalatest.Transformer.apply(Transformer.scala:20)
	at app//org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:186)
	at app//org.scalatest.TestSuite.withFixture(TestSuite.scala:196)
	at app//org.scalatest.TestSuite.withFixture$(TestSuite.scala:195)
	at app//infrastructure.TestBase.org$scalatest$concurrent$TimeLimitedTests$$super$withFixture(TestBase.scala:9)
	at app//org.scalatest.concurrent.TimeLimitedTests.$anonfun$withFixture$3(TimeLimitedTests.scala:154)
	at app//org.scalatest.enablers.Timed$$anon$1.timeoutAfter(Timed.scala:127)
	at app//org.scalatest.concurrent.TimeLimits.failAfterImpl(TimeLimits.scala:239)
	at app//org.scalatest.concurrent.TimeLimits.failAfterImpl$(TimeLimits.scala:233)
	at app//org.scalatest.concurrent.TimeLimits$.failAfterImpl(TimeLimits.scala:305)
	at app//org.scalatest.concurrent.TimeLimitedTests.withFixture(TimeLimitedTests.scala:153)
	at app//org.scalatest.concurrent.TimeLimitedTests.withFixture$(TimeLimitedTests.scala:150)
	at app//infrastructure.TestBase.withFixture(TestBase.scala:9)
	at app//org.scalatest.FunSuiteLike.invokeWithFixture$1(FunSuiteLike.scala:184)
	at app//org.scalatest.FunSuiteLike.$anonfun$runTest$1(FunSuiteLike.scala:196)
	at app//org.scalatest.SuperEngine.runTestImpl(Engine.scala:286)
	at app//org.scalatest.FunSuiteLike.runTest(FunSuiteLike.scala:196)
	at app//org.scalatest.FunSuiteLike.runTest$(FunSuiteLike.scala:178)
	at app//org.scalatest.FunSuite.runTest(FunSuite.scala:1560)
	at app//org.scalatest.FunSuiteLike.$anonfun$runTests$1(FunSuiteLike.scala:229)
	at app//org.scalatest.SuperEngine.$anonfun$runTestsInBranch$1(Engine.scala:393)
	at app//scala.collection.immutable.List.foreach(List.scala:334)
	at app//org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:381)
	at app//org.scalatest.SuperEngine.runTestsInBranch(Engine.scala:376)
	at app//org.scalatest.SuperEngine.runTestsImpl(Engine.scala:458)
	at app//org.scalatest.FunSuiteLike.runTests(FunSuiteLike.scala:229)
	at app//org.scalatest.FunSuiteLike.runTests$(FunSuiteLike.scala:228)
	at app//org.scalatest.FunSuite.runTests(FunSuite.scala:1560)
	at app//org.scalatest.Suite.run(Suite.scala:1124)
	at app//org.scalatest.Suite.run$(Suite.scala:1106)
	at app//org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at app//org.scalatest.FunSuiteLike.$anonfun$run$1(FunSuiteLike.scala:233)
	at app//org.scalatest.SuperEngine.runImpl(Engine.scala:518)
	at app//org.scalatest.FunSuiteLike.run(FunSuiteLike.scala:233)
	at app//org.scalatest.FunSuiteLike.run$(FunSuiteLike.scala:232)
	at app//infrastructure.TestBase.run(TestBase.scala:26)
	at app//org.scalatest.Suite.callExecuteOnSuite$1(Suite.scala:1187)
	at app//org.scalatest.Suite.$anonfun$runNestedSuites$1(Suite.scala:1234)
	at app//scala.collection.ArrayOps$.foreach$extension(ArrayOps.scala:1323)
	at app//org.scalatest.Suite.runNestedSuites(Suite.scala:1232)
	at app//org.scalatest.Suite.runNestedSuites$(Suite.scala:1166)
	at app//org.scalatest.Suites.runNestedSuites(Suites.scala:56)
	at app//org.scalatest.Suite.run(Suite.scala:1121)
	at app//org.scalatest.Suite.run$(Suite.scala:1106)
	at app//tetris.TetrisTestSuitesBase.runDirect(TetrisTestSuitesBase.scala:20)
	at app//tetris.TetrisTestSuitesBase.runWithScoreCounter(TetrisTestSuitesBase.scala:14)
	at app//tetris.TetrisTestSuite3_2.run(TetrisTestSuite3_2.scala:25)
	at app//org.scalatestplus.junit.JUnitRunner.run(JUnitRunner.scala:99)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:112)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:40)
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:54)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:53)
	at java.base@17.0.12/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base@17.0.12/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base@17.0.12/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base@17.0.12/java.lang.reflect.Method.invoke(Unknown Source)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:92)
	at jdk.proxy1/jdk.proxy1.$Proxy4.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$2.run(TestWorker.java:183)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:132)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:103)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:63)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:121)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71)
	at app//worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at app//worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
</failure>
  </testcase>
  <testcase name="testClear3Lines" classname="tetris.ClearLinesTests" time="0.006">
    <failure message="org.scalatest.exceptions.TestFailedException: didPass was false&#10;Hint: When a new tetromino is placed, any full lines are removed from the board. If a lines is&#10;removed, the lines above it are moved down to such that the line is replaced by the line above it.&#10;Empty lines are added to the top to ensure the game has the correct height.&#10;--------------------------------------------------------------------------------&#10;This is what went wrong:&#10;&#10;step=0, rand=0, actions=&lt;&gt;&#10;Want | Got ✓&#10;------------&#10;.... | .... &#10;IIII | IIII &#10;.... | .... &#10;.... | .... &#10;ZZZ. | ZZZ. &#10;.Z.. | .Z.. &#10;ZZZ. | ZZZ. &#10;ZZZ. | ZZZ. &#10;&#10;step=1, rand=0, actions=&lt;RotateRight&gt;&#10;Want | Got ✓&#10;------------&#10;..I. | ..I. &#10;..I. | ..I. &#10;..I. | ..I. &#10;..I. | ..I. &#10;ZZZ. | ZZZ. &#10;.Z.. | .Z.. &#10;ZZZ. | ZZZ. &#10;ZZZ. | ZZZ. &#10;&#10;step=2, rand=0, actions=&lt;Right&gt;&#10;Want | Got ✓&#10;------------&#10;...I | ...I &#10;...I | ...I &#10;...I | ...I &#10;...I | ...I &#10;ZZZ. | ZZZ. &#10;.Z.. | .Z.. &#10;ZZZ. | ZZZ. &#10;ZZZ. | ZZZ. &#10;&#10;step=3, rand=0, actions=&lt;Down&gt;&#10;Want | Got ✓&#10;------------&#10;.... | .... &#10;...I | ...I &#10;...I | ...I &#10;...I | ...I &#10;ZZZI | ZZZI &#10;.Z.. | .Z.. &#10;ZZZ. | ZZZ. &#10;ZZZ. | ZZZ. &#10;&#10;step=4, rand=0, actions=&lt;Down&gt;&#10;Want | Got ✓&#10;------------&#10;.... | .... &#10;.... | .... &#10;...I | ...I &#10;...I | ...I &#10;ZZZI | ZZZI &#10;.Z.I | .Z.I &#10;ZZZ. | ZZZ. &#10;ZZZ. | ZZZ. &#10;&#10;step=5, rand=0, actions=&lt;Down&gt;&#10;Want | Got ✓&#10;------------&#10;.... | .... &#10;.... | .... &#10;.... | .... &#10;...I | ...I &#10;ZZZI | ZZZI &#10;.Z.I | .Z.I &#10;ZZZI | ZZZI &#10;ZZZ. | ZZZ. &#10;&#10;step=6, rand=0, actions=&lt;Down&gt;&#10;Want | Got ✓&#10;------------&#10;.... | .... &#10;.... | .... &#10;.... | .... &#10;.... | .... &#10;ZZZI | ZZZI &#10;.Z.I | .Z.I &#10;ZZZI | ZZZI &#10;ZZZI | ZZZI &#10;&#10;step=7, rand=0, actions=&lt;Down&gt;&#10;Want | Got ✗&#10;------------&#10;.... | .... &#10;IIII | IIII &#10;.... | .... &#10;.... | .... &#10;.... | ZZZI &#10;.... | .Z.I &#10;.... | ZZZI &#10;.Z.I | ZZZI &#10;&#10;" type="org.scalatest.exceptions.TestFailedException">org.scalatest.exceptions.TestFailedException: didPass was false
Hint: When a new tetromino is placed, any full lines are removed from the board. If a lines is
removed, the lines above it are moved down to such that the line is replaced by the line above it.
Empty lines are added to the top to ensure the game has the correct height.
--------------------------------------------------------------------------------
This is what went wrong:

step=0, rand=0, actions=&lt;&gt;
Want | Got ✓
------------
.... | .... 
IIII | IIII 
.... | .... 
.... | .... 
ZZZ. | ZZZ. 
.Z.. | .Z.. 
ZZZ. | ZZZ. 
ZZZ. | ZZZ. 

step=1, rand=0, actions=&lt;RotateRight&gt;
Want | Got ✓
------------
..I. | ..I. 
..I. | ..I. 
..I. | ..I. 
..I. | ..I. 
ZZZ. | ZZZ. 
.Z.. | .Z.. 
ZZZ. | ZZZ. 
ZZZ. | ZZZ. 

step=2, rand=0, actions=&lt;Right&gt;
Want | Got ✓
------------
...I | ...I 
...I | ...I 
...I | ...I 
...I | ...I 
ZZZ. | ZZZ. 
.Z.. | .Z.. 
ZZZ. | ZZZ. 
ZZZ. | ZZZ. 

step=3, rand=0, actions=&lt;Down&gt;
Want | Got ✓
------------
.... | .... 
...I | ...I 
...I | ...I 
...I | ...I 
ZZZI | ZZZI 
.Z.. | .Z.. 
ZZZ. | ZZZ. 
ZZZ. | ZZZ. 

step=4, rand=0, actions=&lt;Down&gt;
Want | Got ✓
------------
.... | .... 
.... | .... 
...I | ...I 
...I | ...I 
ZZZI | ZZZI 
.Z.I | .Z.I 
ZZZ. | ZZZ. 
ZZZ. | ZZZ. 

step=5, rand=0, actions=&lt;Down&gt;
Want | Got ✓
------------
.... | .... 
.... | .... 
.... | .... 
...I | ...I 
ZZZI | ZZZI 
.Z.I | .Z.I 
ZZZI | ZZZI 
ZZZ. | ZZZ. 

step=6, rand=0, actions=&lt;Down&gt;
Want | Got ✓
------------
.... | .... 
.... | .... 
.... | .... 
.... | .... 
ZZZI | ZZZI 
.Z.I | .Z.I 
ZZZI | ZZZI 
ZZZI | ZZZI 

step=7, rand=0, actions=&lt;Down&gt;
Want | Got ✗
------------
.... | .... 
IIII | IIII 
.... | .... 
.... | .... 
.... | ZZZI 
.... | .Z.I 
.... | ZZZI 
.Z.I | ZZZI 


	at app//org.scalatest.Assertions.newAssertionFailedException(Assertions.scala:530)
	at app//org.scalatest.Assertions.newAssertionFailedException$(Assertions.scala:529)
	at app//org.scalatest.FunSuite.newAssertionFailedException(FunSuite.scala:1560)
	at app//org.scalatest.Assertions$AssertionsHelper.macroAssert(Assertions.scala:503)
	at app//generic.GameTestSuite.checkGame(GameTestSuite.scala:298)
	at app//tetris.TetrisTestSuiteBase.checkGame(TetrisTestSuiteBase.scala:106)
	at app//tetris.ClearLinesTests.$anonfun$new$4(ClearLinesTests.scala:319)
	at app//scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at app//infrastructure.TestBase.$anonfun$test$1(TestBase.scala:36)
	at app//org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)
	at app//org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)
	at app//org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at app//org.scalatest.Transformer.apply(Transformer.scala:22)
	at app//org.scalatest.Transformer.apply(Transformer.scala:20)
	at app//org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:186)
	at app//org.scalatest.TestSuite.withFixture(TestSuite.scala:196)
	at app//org.scalatest.TestSuite.withFixture$(TestSuite.scala:195)
	at app//infrastructure.TestBase.org$scalatest$concurrent$TimeLimitedTests$$super$withFixture(TestBase.scala:9)
	at app//org.scalatest.concurrent.TimeLimitedTests.$anonfun$withFixture$3(TimeLimitedTests.scala:154)
	at app//org.scalatest.enablers.Timed$$anon$1.timeoutAfter(Timed.scala:127)
	at app//org.scalatest.concurrent.TimeLimits.failAfterImpl(TimeLimits.scala:239)
	at app//org.scalatest.concurrent.TimeLimits.failAfterImpl$(TimeLimits.scala:233)
	at app//org.scalatest.concurrent.TimeLimits$.failAfterImpl(TimeLimits.scala:305)
	at app//org.scalatest.concurrent.TimeLimitedTests.withFixture(TimeLimitedTests.scala:153)
	at app//org.scalatest.concurrent.TimeLimitedTests.withFixture$(TimeLimitedTests.scala:150)
	at app//infrastructure.TestBase.withFixture(TestBase.scala:9)
	at app//org.scalatest.FunSuiteLike.invokeWithFixture$1(FunSuiteLike.scala:184)
	at app//org.scalatest.FunSuiteLike.$anonfun$runTest$1(FunSuiteLike.scala:196)
	at app//org.scalatest.SuperEngine.runTestImpl(Engine.scala:286)
	at app//org.scalatest.FunSuiteLike.runTest(FunSuiteLike.scala:196)
	at app//org.scalatest.FunSuiteLike.runTest$(FunSuiteLike.scala:178)
	at app//org.scalatest.FunSuite.runTest(FunSuite.scala:1560)
	at app//org.scalatest.FunSuiteLike.$anonfun$runTests$1(FunSuiteLike.scala:229)
	at app//org.scalatest.SuperEngine.$anonfun$runTestsInBranch$1(Engine.scala:393)
	at app//scala.collection.immutable.List.foreach(List.scala:334)
	at app//org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:381)
	at app//org.scalatest.SuperEngine.runTestsInBranch(Engine.scala:376)
	at app//org.scalatest.SuperEngine.runTestsImpl(Engine.scala:458)
	at app//org.scalatest.FunSuiteLike.runTests(FunSuiteLike.scala:229)
	at app//org.scalatest.FunSuiteLike.runTests$(FunSuiteLike.scala:228)
	at app//org.scalatest.FunSuite.runTests(FunSuite.scala:1560)
	at app//org.scalatest.Suite.run(Suite.scala:1124)
	at app//org.scalatest.Suite.run$(Suite.scala:1106)
	at app//org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at app//org.scalatest.FunSuiteLike.$anonfun$run$1(FunSuiteLike.scala:233)
	at app//org.scalatest.SuperEngine.runImpl(Engine.scala:518)
	at app//org.scalatest.FunSuiteLike.run(FunSuiteLike.scala:233)
	at app//org.scalatest.FunSuiteLike.run$(FunSuiteLike.scala:232)
	at app//infrastructure.TestBase.run(TestBase.scala:26)
	at app//org.scalatest.Suite.callExecuteOnSuite$1(Suite.scala:1187)
	at app//org.scalatest.Suite.$anonfun$runNestedSuites$1(Suite.scala:1234)
	at app//scala.collection.ArrayOps$.foreach$extension(ArrayOps.scala:1323)
	at app//org.scalatest.Suite.runNestedSuites(Suite.scala:1232)
	at app//org.scalatest.Suite.runNestedSuites$(Suite.scala:1166)
	at app//org.scalatest.Suites.runNestedSuites(Suites.scala:56)
	at app//org.scalatest.Suite.run(Suite.scala:1121)
	at app//org.scalatest.Suite.run$(Suite.scala:1106)
	at app//tetris.TetrisTestSuitesBase.runDirect(TetrisTestSuitesBase.scala:20)
	at app//tetris.TetrisTestSuitesBase.runWithScoreCounter(TetrisTestSuitesBase.scala:14)
	at app//tetris.TetrisTestSuite3_2.run(TetrisTestSuite3_2.scala:25)
	at app//org.scalatestplus.junit.JUnitRunner.run(JUnitRunner.scala:99)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:112)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:40)
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:54)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:53)
	at java.base@17.0.12/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base@17.0.12/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base@17.0.12/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base@17.0.12/java.lang.reflect.Method.invoke(Unknown Source)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:92)
	at jdk.proxy1/jdk.proxy1.$Proxy4.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$2.run(TestWorker.java:183)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:132)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:103)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:63)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:121)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71)
	at app//worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at app//worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
</failure>
  </testcase>
  <testcase name="testClear4Lines" classname="tetris.ClearLinesTests" time="0.007">
    <failure message="org.scalatest.exceptions.TestFailedException: didPass was false&#10;Hint: When a new tetromino is placed, any full lines are removed from the board. If a lines is&#10;removed, the lines above it are moved down to such that the line is replaced by the line above it.&#10;Empty lines are added to the top to ensure the game has the correct height.&#10;--------------------------------------------------------------------------------&#10;This is what went wrong:&#10;&#10;step=0, rand=0, actions=&lt;&gt;&#10;Want | Got ✓&#10;------------&#10;.... | .... &#10;IIII | IIII &#10;.... | .... &#10;...O | ...O &#10;Z.ZZ | Z.ZZ &#10;Z.ZZ | Z.ZZ &#10;Z.ZZ | Z.ZZ &#10;Z.ZZ | Z.ZZ &#10;.ZZZ | .ZZZ &#10;&#10;step=1, rand=0, actions=&lt;RotateRight&gt;&#10;Want | Got ✓&#10;------------&#10;..I. | ..I. &#10;..I. | ..I. &#10;..I. | ..I. &#10;..IO | ..IO &#10;Z.ZZ | Z.ZZ &#10;Z.ZZ | Z.ZZ &#10;Z.ZZ | Z.ZZ &#10;Z.ZZ | Z.ZZ &#10;.ZZZ | .ZZZ &#10;&#10;step=2, rand=0, actions=&lt;Left&gt;&#10;Want | Got ✓&#10;------------&#10;.I.. | .I.. &#10;.I.. | .I.. &#10;.I.. | .I.. &#10;.I.O | .I.O &#10;Z.ZZ | Z.ZZ &#10;Z.ZZ | Z.ZZ &#10;Z.ZZ | Z.ZZ &#10;Z.ZZ | Z.ZZ &#10;.ZZZ | .ZZZ &#10;&#10;step=3, rand=0, actions=&lt;Down&gt;&#10;Want | Got ✓&#10;------------&#10;.... | .... &#10;.I.. | .I.. &#10;.I.. | .I.. &#10;.I.O | .I.O &#10;ZIZZ | ZIZZ &#10;Z.ZZ | Z.ZZ &#10;Z.ZZ | Z.ZZ &#10;Z.ZZ | Z.ZZ &#10;.ZZZ | .ZZZ &#10;&#10;step=4, rand=0, actions=&lt;Down&gt;&#10;Want | Got ✓&#10;------------&#10;.... | .... &#10;.... | .... &#10;.I.. | .I.. &#10;.I.O | .I.O &#10;ZIZZ | ZIZZ &#10;ZIZZ | ZIZZ &#10;Z.ZZ | Z.ZZ &#10;Z.ZZ | Z.ZZ &#10;.ZZZ | .ZZZ &#10;&#10;step=5, rand=0, actions=&lt;Down&gt;&#10;Want | Got ✓&#10;------------&#10;.... | .... &#10;.... | .... &#10;.... | .... &#10;.I.O | .I.O &#10;ZIZZ | ZIZZ &#10;ZIZZ | ZIZZ &#10;ZIZZ | ZIZZ &#10;Z.ZZ | Z.ZZ &#10;.ZZZ | .ZZZ &#10;&#10;step=6, rand=0, actions=&lt;Down&gt;&#10;Want | Got ✓&#10;------------&#10;.... | .... &#10;.... | .... &#10;.... | .... &#10;...O | ...O &#10;ZIZZ | ZIZZ &#10;ZIZZ | ZIZZ &#10;ZIZZ | ZIZZ &#10;ZIZZ | ZIZZ &#10;.ZZZ | .ZZZ &#10;&#10;step=7, rand=0, actions=&lt;Down&gt;&#10;Want | Got ✗&#10;------------&#10;.... | .... &#10;IIII | IIII &#10;.... | .... &#10;.... | ...O &#10;.... | ZIZZ &#10;.... | ZIZZ &#10;.... | ZIZZ &#10;...O | ZIZZ &#10;.ZZZ | .ZZZ &#10;&#10;" type="org.scalatest.exceptions.TestFailedException">org.scalatest.exceptions.TestFailedException: didPass was false
Hint: When a new tetromino is placed, any full lines are removed from the board. If a lines is
removed, the lines above it are moved down to such that the line is replaced by the line above it.
Empty lines are added to the top to ensure the game has the correct height.
--------------------------------------------------------------------------------
This is what went wrong:

step=0, rand=0, actions=&lt;&gt;
Want | Got ✓
------------
.... | .... 
IIII | IIII 
.... | .... 
...O | ...O 
Z.ZZ | Z.ZZ 
Z.ZZ | Z.ZZ 
Z.ZZ | Z.ZZ 
Z.ZZ | Z.ZZ 
.ZZZ | .ZZZ 

step=1, rand=0, actions=&lt;RotateRight&gt;
Want | Got ✓
------------
..I. | ..I. 
..I. | ..I. 
..I. | ..I. 
..IO | ..IO 
Z.ZZ | Z.ZZ 
Z.ZZ | Z.ZZ 
Z.ZZ | Z.ZZ 
Z.ZZ | Z.ZZ 
.ZZZ | .ZZZ 

step=2, rand=0, actions=&lt;Left&gt;
Want | Got ✓
------------
.I.. | .I.. 
.I.. | .I.. 
.I.. | .I.. 
.I.O | .I.O 
Z.ZZ | Z.ZZ 
Z.ZZ | Z.ZZ 
Z.ZZ | Z.ZZ 
Z.ZZ | Z.ZZ 
.ZZZ | .ZZZ 

step=3, rand=0, actions=&lt;Down&gt;
Want | Got ✓
------------
.... | .... 
.I.. | .I.. 
.I.. | .I.. 
.I.O | .I.O 
ZIZZ | ZIZZ 
Z.ZZ | Z.ZZ 
Z.ZZ | Z.ZZ 
Z.ZZ | Z.ZZ 
.ZZZ | .ZZZ 

step=4, rand=0, actions=&lt;Down&gt;
Want | Got ✓
------------
.... | .... 
.... | .... 
.I.. | .I.. 
.I.O | .I.O 
ZIZZ | ZIZZ 
ZIZZ | ZIZZ 
Z.ZZ | Z.ZZ 
Z.ZZ | Z.ZZ 
.ZZZ | .ZZZ 

step=5, rand=0, actions=&lt;Down&gt;
Want | Got ✓
------------
.... | .... 
.... | .... 
.... | .... 
.I.O | .I.O 
ZIZZ | ZIZZ 
ZIZZ | ZIZZ 
ZIZZ | ZIZZ 
Z.ZZ | Z.ZZ 
.ZZZ | .ZZZ 

step=6, rand=0, actions=&lt;Down&gt;
Want | Got ✓
------------
.... | .... 
.... | .... 
.... | .... 
...O | ...O 
ZIZZ | ZIZZ 
ZIZZ | ZIZZ 
ZIZZ | ZIZZ 
ZIZZ | ZIZZ 
.ZZZ | .ZZZ 

step=7, rand=0, actions=&lt;Down&gt;
Want | Got ✗
------------
.... | .... 
IIII | IIII 
.... | .... 
.... | ...O 
.... | ZIZZ 
.... | ZIZZ 
.... | ZIZZ 
...O | ZIZZ 
.ZZZ | .ZZZ 


	at app//org.scalatest.Assertions.newAssertionFailedException(Assertions.scala:530)
	at app//org.scalatest.Assertions.newAssertionFailedException$(Assertions.scala:529)
	at app//org.scalatest.FunSuite.newAssertionFailedException(FunSuite.scala:1560)
	at app//org.scalatest.Assertions$AssertionsHelper.macroAssert(Assertions.scala:503)
	at app//generic.GameTestSuite.checkGame(GameTestSuite.scala:298)
	at app//tetris.TetrisTestSuiteBase.checkGame(TetrisTestSuiteBase.scala:106)
	at app//tetris.ClearLinesTests.$anonfun$new$5(ClearLinesTests.scala:415)
	at app//scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at app//infrastructure.TestBase.$anonfun$test$1(TestBase.scala:36)
	at app//org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)
	at app//org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)
	at app//org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at app//org.scalatest.Transformer.apply(Transformer.scala:22)
	at app//org.scalatest.Transformer.apply(Transformer.scala:20)
	at app//org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:186)
	at app//org.scalatest.TestSuite.withFixture(TestSuite.scala:196)
	at app//org.scalatest.TestSuite.withFixture$(TestSuite.scala:195)
	at app//infrastructure.TestBase.org$scalatest$concurrent$TimeLimitedTests$$super$withFixture(TestBase.scala:9)
	at app//org.scalatest.concurrent.TimeLimitedTests.$anonfun$withFixture$3(TimeLimitedTests.scala:154)
	at app//org.scalatest.enablers.Timed$$anon$1.timeoutAfter(Timed.scala:127)
	at app//org.scalatest.concurrent.TimeLimits.failAfterImpl(TimeLimits.scala:239)
	at app//org.scalatest.concurrent.TimeLimits.failAfterImpl$(TimeLimits.scala:233)
	at app//org.scalatest.concurrent.TimeLimits$.failAfterImpl(TimeLimits.scala:305)
	at app//org.scalatest.concurrent.TimeLimitedTests.withFixture(TimeLimitedTests.scala:153)
	at app//org.scalatest.concurrent.TimeLimitedTests.withFixture$(TimeLimitedTests.scala:150)
	at app//infrastructure.TestBase.withFixture(TestBase.scala:9)
	at app//org.scalatest.FunSuiteLike.invokeWithFixture$1(FunSuiteLike.scala:184)
	at app//org.scalatest.FunSuiteLike.$anonfun$runTest$1(FunSuiteLike.scala:196)
	at app//org.scalatest.SuperEngine.runTestImpl(Engine.scala:286)
	at app//org.scalatest.FunSuiteLike.runTest(FunSuiteLike.scala:196)
	at app//org.scalatest.FunSuiteLike.runTest$(FunSuiteLike.scala:178)
	at app//org.scalatest.FunSuite.runTest(FunSuite.scala:1560)
	at app//org.scalatest.FunSuiteLike.$anonfun$runTests$1(FunSuiteLike.scala:229)
	at app//org.scalatest.SuperEngine.$anonfun$runTestsInBranch$1(Engine.scala:393)
	at app//scala.collection.immutable.List.foreach(List.scala:334)
	at app//org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:381)
	at app//org.scalatest.SuperEngine.runTestsInBranch(Engine.scala:376)
	at app//org.scalatest.SuperEngine.runTestsImpl(Engine.scala:458)
	at app//org.scalatest.FunSuiteLike.runTests(FunSuiteLike.scala:229)
	at app//org.scalatest.FunSuiteLike.runTests$(FunSuiteLike.scala:228)
	at app//org.scalatest.FunSuite.runTests(FunSuite.scala:1560)
	at app//org.scalatest.Suite.run(Suite.scala:1124)
	at app//org.scalatest.Suite.run$(Suite.scala:1106)
	at app//org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at app//org.scalatest.FunSuiteLike.$anonfun$run$1(FunSuiteLike.scala:233)
	at app//org.scalatest.SuperEngine.runImpl(Engine.scala:518)
	at app//org.scalatest.FunSuiteLike.run(FunSuiteLike.scala:233)
	at app//org.scalatest.FunSuiteLike.run$(FunSuiteLike.scala:232)
	at app//infrastructure.TestBase.run(TestBase.scala:26)
	at app//org.scalatest.Suite.callExecuteOnSuite$1(Suite.scala:1187)
	at app//org.scalatest.Suite.$anonfun$runNestedSuites$1(Suite.scala:1234)
	at app//scala.collection.ArrayOps$.foreach$extension(ArrayOps.scala:1323)
	at app//org.scalatest.Suite.runNestedSuites(Suite.scala:1232)
	at app//org.scalatest.Suite.runNestedSuites$(Suite.scala:1166)
	at app//org.scalatest.Suites.runNestedSuites(Suites.scala:56)
	at app//org.scalatest.Suite.run(Suite.scala:1121)
	at app//org.scalatest.Suite.run$(Suite.scala:1106)
	at app//tetris.TetrisTestSuitesBase.runDirect(TetrisTestSuitesBase.scala:20)
	at app//tetris.TetrisTestSuitesBase.runWithScoreCounter(TetrisTestSuitesBase.scala:14)
	at app//tetris.TetrisTestSuite3_2.run(TetrisTestSuite3_2.scala:25)
	at app//org.scalatestplus.junit.JUnitRunner.run(JUnitRunner.scala:99)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:112)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:40)
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:54)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:53)
	at java.base@17.0.12/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base@17.0.12/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base@17.0.12/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base@17.0.12/java.lang.reflect.Method.invoke(Unknown Source)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:92)
	at jdk.proxy1/jdk.proxy1.$Proxy4.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$2.run(TestWorker.java:183)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:132)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:103)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:63)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:121)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71)
	at app//worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at app//worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
</failure>
  </testcase>
  <system-out><![CDATA[Rotated Right
newPiece
Rotated Right
Moved Right
newPiece
Rotated Right
Moved Right
newPiece
Rotated Right
Moved Right
newPiece
Rotated Right
Moved Left
newPiece
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
